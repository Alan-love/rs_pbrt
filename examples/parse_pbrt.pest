WHITESPACE = _{ " " }
// identifiers
identifier = { "AttributeBegin" |
               "AttributeEnd" |
               "ActiveTransform" |
               "AreaLightSource" |
               "Accelerator" |
               "ConcatTransform" |
               "CoordinateSystem" |
               "CoordSysTransform" |
               "Camera" |
               "Film" |
               "Integrator" |
               "Include" |
               "Identity" |
               "LightSource" |
               "LookAt" |
               "MakeNamedMaterial" |
               "MakeNamedMedium" |
               "Material" |
               "MediumInterface" |
               "NamedMaterial" |
               "ObjectBegin" |
               "ObjectEnd" |
               "ObjectInstance" |
               "PixelFilter" |
               "ReverseOrientation" |
               "Rotate" |
               "Shape" |
               "Sampler" |
               "Scale" |
               "TransformBegin" |
               "TransformEnd" |
               "Transform" |
               "Translate" |
               "TransformTimes" |
               "Texture" |
               "WorldBegin" |
               "WorldEnd" }
// statements without arguments
// statement_no_args = { attribute_begin |
//                       attribute_end |
//                       world_begin |
//                       world_end }
// statements with fixed number of arguments
// statements with variable number of arguments
// statement_with_opt_args = { film |
//                             sampler }
// this should be empty in the end
// statement_left_todo = { identifier ~ ANY* ~ !identifier }
// statements
// statement = { statement_no_args |
// // TODO:      statement_fixed_num_args |
//               statement_with_opt_args |
//               statement_left_todo }
// rules in alphabetical order
// ActiveTransform
// AreaLightSource
// Accelerator
// ConcatTransform
// CoordinateSystem
// CoordSysTransform
// Camera
// Integrator
// Include
// Identity
// LightSource
// MakeNamedMaterial
// MakeNamedMedium
// Material
// MediumInterface
// NamedMaterial
// ObjectBegin
// ObjectEnd
// ObjectInstance
// PixelFilter
// ReverseOrientation
// Shape
// Sampler
// sampler = { "Sampler" ~ ANY* ~ !(comment_line | identifier) }
// Scale
// TransformBegin
// TransformEnd
// Transform
// TransformTimes
// Texture
// comments
comment_line = { "#" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }
trailing_comment = { "#" ~ (!NEWLINE ~ ANY)* }
// statements
remaining_line = { (!(NEWLINE | "#") ~ ANY)* }
statement_line = { identifier ~ remaining_line ~ (trailing_comment)? ~ NEWLINE }
// count empty lines later
empty_line = { NEWLINE }
// catch any lines left to do
remaining_params = { (!(NEWLINE | "#") ~ ANY)* }
todo_line = { remaining_params ~ (trailing_comment)? ~ NEWLINE }
// main .pbrt file
pbrt = { SOI ~
         (comment_line |
          statement_line |
          empty_line |
          todo_line
         )* ~
         EOI }
// single lines with all parameters
string = { ("\"" ~ ASCII_ALPHA+ ~ "\"") | ("\"" ~ filename ~ "\"") }
type_name = { "\"" ~ typename ~ "\"" }
typename = { ASCII_ALPHA_LOWER+ }
file_name = { "\"" ~ filename ~ "\"" }
filename = { ("/" | "./" ~ ("../")? | "../" ~ ("../")?)? ~ // optional (can be a full or relative path)
             (ASCII_ALPHA_LOWER | "_") ~
             (ASCII_ALPHA_LOWER | "_" | "-" | "." | "/" | '0'..'9')* }
type_params = { (type_name | file_name) ~ parameter* }
name_and_or_params = { // identifier "type" parameter-list
                       type_params |
                       // predetermined number of arguments of predetermined type
                       look_at |
                       rotate |
                       translate |
                       // catch others
                       remaining_line }
// LookAt eye_x eye_y eye_z look_x look_y look_z up_x up_y up_z
look_at = { // "LookAt" ~
            // followed by 9 numbers:

            // eye_x eye_y eye_z
            number ~ number ~ number ~
            // look_x look_y look_z
            number ~ number ~ number ~
            // up_x up_y up_z
            number ~ number ~ number
}
// Rotate angle x y z
rotate = { // "Rotate" ~
           // followed by 4 numbers:
           number ~ number ~ number ~ number
}
// Translate x y z
translate = { // "Translate" ~
           // followed by 3 numbers:
           number ~ number ~ number
}
// helpers
lbrack = { "[" }
rbrack = { "]" }
// NUMBER -+?(0-9+|((0-9+\.0-9*)|(\.0-9+)))(eE-+?0-9+)?
number = @{
    ("-" | "+")? ~ // optional sign, followed by
    (
        (
            ("." ~ '0'..'9'+) // dot and digits
                | // or
            ('0'..'9'+ ~ "." ~ '0'..'9'*) // digits, dot, and (optional digits)
        )
            | // or
        '0'..'9'+ // just digits
    ) ~ ( // followed by (optional)
        ("e" | "E") ~ // 'e' or 'E', followed by
        ("-" | "+")? ~ // optional sign, followed by
        '0'..'9'+ // digits
    )?
}
integer = @{
    ("-" | "+")? ~ // optional sign, followed by
        (
            '1'..'9' ~ // at least one non-zero digit, followed by
            '0'..'9'* // just digits
        )
            | // or
        '0'..'9' // single digit
}
parameter = { bool_param |
              blackbody_param |
              float_param |
              integer_param |
              point2_param |
              point_param |
              normal_param |
              rgb_param |
              spectrum_param |
              string_param |
              texture_param |
              vector_param }
ident = { ASCII_ALPHA+ }
bool_param = { ("\"bool" ~ ident ~ "\"" ~ lbrack ~ string ~ rbrack) |
               ("\"bool" ~ ident ~ "\"" ~ string) }
blackbody_param = { ("\"blackbody" ~ ident ~ "\"" ~ lbrack ~ number ~ number+ ~ rbrack) }
float_param = { ("\"float" ~ ident ~ "\"" ~ lbrack ~ number+ ~ rbrack) |
                ("\"float" ~ ident ~ "\"" ~ number) }
string_param = { "\"string" ~ ident ~ "\"" ~ lbrack ~ string ~ rbrack |
                 "\"string" ~ ident ~ "\"" ~ string }
integer_param = { ("\"integer" ~ ident ~ "\"" ~ lbrack ~ integer+ ~ rbrack) |
                  ("\"integer" ~ ident ~ "\"" ~ integer) }
point2_param = { "\"point2" ~ ident ~ "\"" ~ lbrack ~ number+ ~ rbrack }
point_param = { "\"point" ~ ident ~ "\"" ~ lbrack ~ number+ ~ rbrack }
vector_param = { "\"vector" ~ ident ~ "\"" ~ lbrack ~ number ~ number ~ number ~ rbrack }
normal_param = { "\"normal" ~ ident ~ "\"" ~ lbrack ~ number+ ~ rbrack }
rgb_param = { ("\"rgb" ~ ident ~ "\"" ~ lbrack ~ number ~ number ~ number ~ rbrack) |
              ("\"color" ~ ident ~ "\"" ~ lbrack ~ number ~ number ~ number ~ rbrack) }
// TODO: "spectrum Kd" [ 300 .3  400 .6   410 .65  415 .8  500 .2  600 .1 ]
// or
// "spectrum Kd" "filename"
spectrum_param = { "\"spectrum" ~ ident ~ "\"" ~ string }
texture_param = { "\"texture" ~ ident ~ "\"" ~ lbrack ~ string ~ rbrack |
                  "\"texture" ~ ident ~ "\"" ~ string }
